{"version":3,"sources":["modules/general.js","Components/SignUp/signup.jsx","pages/signup.js","Components/Login/login.jsx","pages/login.js","Components/UserProfile/user_profile.jsx","pages/user_profile.js","App.js","reportWebVitals.js","index.js"],"names":["csrf_token","exeFetch","url","options","navigate","console","log","localStorage","getItem","headers","Object","assign","fetch","then","res","a","ok","_csrf_token","get","setItem","json","body","status","err","signup","useNavigate","email","useRef","name","description","useEffect","className","type","ref","colSpan","value","onClick","newUserData","current","method","JSON","stringify","state","data","catch","e","alert","to","page","login","useState","setEmail","onChange","target","user_profile","useLocation","uuid","userData","setUserData","activeSessions","setUserActiveSessions","gerUserActiveSessions","_interval","setInterval","clearInterval","disabled","defaultValue","decodeURIComponent","document","cookie","map","ip","ua","token_id","exp","blockToken","Date","toLocaleString","entries","parse","key","val","App","path","exact","element","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ab0479f.chunk.js","sourcesContent":["let csrf_token;\n\n\nconst exeFetch = (url, options = {}, navigate = () => { }) => {\n    console.log(url,csrf_token)\n    csrf_token= csrf_token || localStorage.getItem(\"csrf_token\")\n    if(csrf_token){\n        options.headers=Object.assign( options.headers || {},{csrf_token},)\n    }\n    return fetch(url, options)\n        .then(async (res) => {\n            if (res.ok) {\n                let _csrf_token=res.headers.get('csrf_token')\n                if(_csrf_token){\n                    csrf_token=_csrf_token\n                    localStorage.setItem(\"csrf_token\",csrf_token)\n                }\n                console.log(\"csrf_token\",csrf_token)\n                return {\n                    body: await res.json(),\n                }\n            }\n            else if (res.status == 401) {\n                throw { body: await res.json(), ...(navigate() || {}) }\n            }\n            else {\n                throw { err: res.status,body: await res.json(), ...(navigate() || {}) }\n            }\n        })\n}\n\n\nexport {\n    exeFetch\n}","import React, { useRef } from \"react\"\nimport { useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useNavigate } from \"react-router-dom\"\nimport {exeFetch} from \"../../modules\"\nimport \"./style.scss\"\n\nexport default function signup() {\n    let navigate = useNavigate()\n\n    let email = useRef(null)\n    let name = useRef(null)\n    let description = useRef(null)\n\n    const createNewUser = () => {\n        const newUserData = {\n            email: email.current.value,\n            name: name.current.value,\n            description: description.current.value,\n        }\n\n        exeFetch(\"/api/sign_up\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newUserData),\n        })\n            .then(({ body }) => {\n                navigate(\"/user_profile\", {\n                    state: body.data,\n                })\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    useEffect(() => {\n        console.log(\"-----------sign up----------\")\n\n    }, [])\n    \n\n    return (\n        <div className=\"sign_up\">\n            <center>\n                <h1>Signup</h1>\n            </center>\n            <br />\n\n            <fieldset>\n                <legend>User detail</legend>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Username</td>\n                            <td>\n                                <input type=\"text\" ref={name} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Email</td>\n                            <td>\n                                <input type=\"text\" ref={email} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Detail</td>\n                            <td>\n                                <textarea\n                                    className=\"ver_resizable\"\n                                    ref={description}\n                                ></textarea>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan={2}>\n                                <input\n                                    type=\"button\"\n                                    value=\"submit\"\n                                    onClick={createNewUser}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </fieldset>\n\n            <label>\n                Already have account? <Link to=\"/\">Login</Link>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Comp from \"../Components/SignUp/signup.jsx\"\n\nexport default function page() {\n  return <Comp />\n}\n","import React from \"react\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\"\nimport {exeFetch} from \"../../modules\"\nimport \"./style.scss\"\n\n\nexport default function login() {\n    let navigate = useNavigate()\n    const [email, setEmail] = useState(null)\n\n    const Login = () => {\n        exeFetch(\"/api/login\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                email: email,\n            }),\n        })\n            .then(({ body }) => {\n                navigate(\"/user_profile\", {\n                    state: body.data,\n                })\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    const login_check = () => {\n        exeFetch(\"/api/login_status\")\n            .then(({ body }) => {\n                console.log(\"/user_profile\")\n                navigate(\"/user_profile\", {\n                    state: body.data,\n                })\n            })\n    }\n\n    useEffect(() => {\n        console.log(\"-----------Login----------\")\n        login_check()\n    }, [])\n\n\n    return (\n        <div className=\"login\">\n            <center>\n                <h1>Login</h1>\n            </center>\n            <br />\n\n            <form>\n                <fieldset>\n                    <legend>User detail</legend>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Email</td>\n                                <td>\n                                    <input\n                                        type=\"email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan={2}>\n                                    <input type=\"button\" value=\"Login\" onClick={Login} />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </fieldset>\n            </form>\n\n            <label>\n                New user? <Link to=\"/signup\">Sign up</Link>\n            </label>\n        </div>\n    )\n}\n","import React from 'react'\nimport Comp from \"../Components/Login/login.jsx\"\n\nexport default function page() {\n  return <Comp />\n}\n","import React, { useState, useRef, useEffect } from \"react\"\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport { exeFetch } from \"../../modules\"\nimport \"./style.scss\"\n\n\nexport default function user_profile() {\n    let { state } = useLocation()\n    let navigate = useNavigate()\n\n    const [userData, setUserData] = useState({ uuid: state?.uuid })\n    const [activeSessions, setUserActiveSessions] = useState([])\n    let email = useRef(null)\n    let name = useRef(null)\n    let description = useRef(null)\n\n    const gerUserData = () => {\n        exeFetch(\"/api/user\")\n            .then(({ body }) => {\n                setUserData(body.data)\n            }, () => navigate(\"/\"))\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    const gerUserActiveSessions = () => {\n        exeFetch(\"/api/user/active_sessions\")\n            .then(({ body }) => {\n                setUserActiveSessions(body.data)\n            }, () => navigate(\"/\"))\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    const updateUserData = () => {\n        const newUserData = {\n            email: email.current.value,\n            name: name.current.value,\n            description: description.current.value,\n        }\n\n        exeFetch(\"/api/user\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                newUserData,\n            }),\n        }, () => navigate(\"/\"))\n            .then(() => {\n                newUserData.uuid = userData.uuid\n                setUserData(newUserData)\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    const removeAccount = () => {\n        exeFetch(\"/api/user\", {\n            method: \"delete\",\n        })\n            .then(({ body }) => {\n                alert(JSON.stringify(body))\n                navigate(\"/signup\")\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n\n\n    const blockToken = (token_id, exp) => {\n        exeFetch(\"/api/user/block_token\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                token_id,\n                exp\n            }),\n        }, () => navigate(\"/\"))\n            .then(() => {\n                gerUserActiveSessions()\n                // alert(JSON.stringify(body))\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n    const Logout = () => {\n        exeFetch(\"/api/user/logout\", {}, () => navigate(\"/\"))\n            .then(() => {\n                navigate(\"/\")\n            })\n            .catch(e => alert(\"Error\\n\" + JSON.stringify(e)))\n    }\n\n\n    let _interval = null\n\n    const login_check = () => {\n        exeFetch(\"/api/login_status\", {}, () =>  navigate(\"/\"))\n    }\n\n    useEffect(() => {\n        console.log(\"-----------user profile----------\")\n        gerUserData()\n        gerUserActiveSessions()\n\n        if (!_interval) {\n            _interval = setInterval(() => {\n                login_check()\n            }, 2000);\n        }\n\n        return () => {\n            clearInterval(_interval)\n        }\n\n\n    }, [])\n\n\n    return (\n        <div className=\"user_profile\">\n            <center>\n                <h1>User profile</h1>\n            </center>\n            <br />\n\n            <div className=\"form_container\">\n                <form className=\"user_view\">\n                    <fieldset>\n                        <legend>User detail</legend>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>UUID</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            disabled\n                                            value={userData?.uuid || \"\"}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Username</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            disabled\n                                            value={userData?.name || \"\"}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Email</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            disabled\n                                            value={userData?.email || \"\"}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Detail</td>\n                                    <td>\n                                        <pre className=\"ver_resizable\">\n                                            {userData?.description || \"\"}\n                                        </pre>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n\n                <form className=\"user_update\">\n                    <fieldset>\n                        <legend>Update User detail</legend>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>UUID</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            disabled\n                                            value={userData?.uuid || \"\"}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Username</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={userData?.name || \"\"}\n                                            ref={name}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Email</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            defaultValue={userData?.email || \"\"}\n                                            ref={email}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Detail</td>\n                                    <td>\n                                        <textarea\n                                            className=\"ver_resizable\"\n                                            ref={description}\n                                            defaultValue={userData?.description || \"\"}\n                                        ></textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        <input\n                                            type=\"button\"\n                                            value=\"submit\"\n                                            onClick={updateUserData}\n                                        />\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n\n                <form className=\"user_logout\">\n                    <fieldset>\n                        <legend>Delete User detail</legend>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>UUID</td>\n                                    <td>\n                                        <input\n                                            type=\"text\"\n                                            disabled\n                                            value={userData?.uuid || \"\"}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>&nbsp;</td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        <input\n                                            type=\"button\"\n                                            value=\"Logout\"\n                                            onClick={Logout}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td colSpan={2}>\n                                        <input\n                                            type=\"button\"\n                                            value=\"Delete my account\"\n                                            onClick={removeAccount}\n                                        />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td><input /></td>\n                                </tr>\n                                <tr>\n                                    <th>Cookie:</th>\n                                    <td>\n                                        {decodeURIComponent(document.cookie)}\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n\n\n                <form className=\"active_sessions\">\n                    <fieldset>\n                        <legend>Active Sessions</legend>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Remove</th>\n                                    <th>IP</th>\n                                    <th>Token</th>\n                                    <th>Status</th>\n                                    <th>Expire</th>\n                                    <th>Use rAgent</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    activeSessions.map(({ ip, ua, token_id, exp, status }) => {\n                                        return (\n                                            <tr key={token_id}>\n                                                <td >\n                                                   {status==\"active\" && <input type=\"button\" value=\"delete\" onClick={() => blockToken(token_id, exp)} />} \n                                                </td>\n                                                <td className=\"ip\">{ip}</td>\n                                                <td>{token_id}</td>\n                                                <td className=\"ip\">{status}</td>\n                                                <td>{new Date(exp).toLocaleString()}</td>\n                                                <td>\n                                                    <div className=\"sub_tbl_sect\">\n                                                        {\n                                                            Object.entries(JSON.parse(ua)).map(([key, val]) => {\n                                                                return <div key={token_id + \"_\" + key}>\n                                                                    <b>{key}</b>: <span>{JSON.stringify(val)}</span>\n                                                                </div>\n                                                            })\n                                                            // JSON.stringify(Object.entries(JSON.parse(ua)))\n                                                        }\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n\n\n\n                            </tbody>\n                        </table>\n                    </fieldset>\n                </form>\n\n\n\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Comp from \"../Components/UserProfile/user_profile.jsx\"\n\nexport default function page() {\n  return <Comp />\n}\n","import React, {Component} from \"react\"\nimport {HashRouter, Routes, Route} from \"react-router-dom\"\nimport SignUp from \"./pages/signup\"\nimport Login from \"./pages/login\"\nimport UserProfile from \"./pages/user_profile\"\n\nexport default class App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/\" exact element={<Login />} />\n                    <Route path=\"signup\" exact element={<SignUp />} />\n                    <Route path=\"user_profile\" exact element={<UserProfile />} />\n                </Routes>\n            </HashRouter>\n        )\n    }\n}\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n        })\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}